import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from tracker import track_package

# .env dosyasÄ±ndan TELEGRAM token'Ä±nÄ± al
load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# /start komutu Ã§alÄ±ÅŸtÄ±ÄŸÄ±nda botun vereceÄŸi yanÄ±t
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ğŸ‘‹ Merhaba! Takip numaranÄ± gÃ¶nder, kargonun durumunu sÃ¶yleyeyim.")

# KullanÄ±cÄ± mesaj gÃ¶nderdiÄŸinde (takip numarasÄ±) Ã§alÄ±ÅŸacak fonksiyon
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tracking_number = update.message.text.strip()
    result = track_package(tracking_number)
    await update.message.reply_text(result)

# Botu baÅŸlatan ana fonksiyon
def start_bot():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    # Komutlar ve mesajlar iÃ§in handler'lar
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ğŸ¤– Bot Ã§alÄ±ÅŸÄ±yor... Telegram'dan bir ÅŸeyler gÃ¶nder :)")
    app.run_polling()
